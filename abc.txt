package  ui; 

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import model.StudentVO;
import model.ProfessorVO;
import model.DepartmentVO;
import model.CourseVO;
import model.CourseDetailsVO;
import model.DatabaseConnect;
import model.DescribeTableVO;


public class PrimaryPanel extends JPanel {

	private JPanel mainPanel;
	private JPanel tempPanel;
	private JComboBox cmbMenu;
	private String[] strMenu = { "Student", "Professor", "Department", "Course", "CourseDetails" };
	private JButton btnSearch;
	private JScrollPane jScollPane;
	private JTable jTable;
	
	JTextField txtStudent_ID;
	JTextField txtStudent_Name;
	JTextField txtStudent_RRN;
	JTextField txtStudent_Address;
	JTextField txtStudent_Phone;
	JTextField txtStudent_Email;
	JTextField txtStudent_Image;
	JTextField txtDepartment_ID;
	JTextField txtProfessor_ID;
	JTextField txtSemester;
	JTextField txtYear;
	
	JTextField txtProfessor_Name;
	JTextField txtProfessor_RRN;
	JTextField txtProfessor_Address;
	JTextField txtProfessor_Phone;
	JTextField txtProfessor_Image;
	JTextField txtProfessor_Email;
	
	JTextField txtDepartment_Phone;
	JTextField txtDepartment_Name;

	
	JTextField txtCourse_ID;
	JTextField txtCourse_Title;
	JTextField txtCredit;
	JTextField txtClass_Time;
	JTextField txtRoom;
	
	JTextField txtAttend_Score;
	JTextField txtMiddle_Score;
	JTextField txtFinal_Score;
	JTextField txtetc_Score;
	JTextField txtTotal_Score;
	JTextField txtGrade_Point;
	
	JTextField txtStudentWhere;
	JTextField txtProfessorWhere;
	JTextField txtDepartmentWhere;
	JTextField txtCourseWhere;
	JTextField txtCourseDetailsWhere;

	private BtnListener btnL;

	private DatabaseConnect dbConnect;

	public PrimaryPanel() {
		// db connect
		dbConnect = new DatabaseConnect();

		// Listener
		btnL = new BtnListener();

		// primary panel
		setBackground(Color.white);
		setPreferredSize(new Dimension(1000, 640));
		setLayout(null);

		setPage();
	}

	public void setPage() {

		mainPanel = new JPanel();
		mainPanel.setBounds(100, 150, 800, 450);
		mainPanel.setBackground(new Color(245, 245, 245));
		mainPanel.setLayout(null);

		// combo box for choosing table
		cmbMenu = new JComboBox();
		for (String str : strMenu)
			cmbMenu.addItem(str);
		cmbMenu.setBounds(105, 105, 170, 40);
		cmbMenu.setFont(new Font("Verdana", Font.PLAIN, 18));
		add(cmbMenu);

		btnSearch = new JButton("Search");
		btnSearch.setBounds(285, 105, 80, 40);
		btnSearch.setFont(new Font("Verdana", Font.PLAIN, 13));
		btnSearch.addActionListener(btnL);
		add(btnSearch);

		add(mainPanel);
		setVisible(true);	
		}
	

	private JPanel getStudentTable(String condition) {
		JPanel jPanel = new JPanel();
		jPanel.setBounds(0, 0, 800, 450);
		jPanel.setBackground(new Color(245, 245, 245));
		jPanel.setLayout(null);
		
		/*******SELECT********/
		JLabel lbSelect = new JLabel("SELECT");
		lbSelect.setBounds(80,20,100,40);
		lbSelect.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbSelect);
		
		JLabel lbWhere = new JLabel("Where : ");
		lbWhere.setBounds(80,60,100,40);
		lbWhere.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbWhere);
		
		txtStudentWhere = new JTextField();
		txtStudentWhere.setBounds(150,65,600,30);
		txtStudentWhere.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(txtStudentWhere);
		
//		btnSelect
		JButton btnSelect = new JButton("Select");
		btnSelect.setBounds(350, 100, 80, 35);
		btnSelect.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnSelect.addActionListener(btnL);
		jPanel.add(btnSelect);
		
		
		/*******INSERT********/
		JLabel lbInsert = new JLabel("INSERT");
		lbInsert.setBounds(80,140,100,40);
		lbInsert.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbInsert);
		
//		Student_ID
		JLabel Student_ID = new JLabel("Student_ID");
		Student_ID.setBounds(80,170,100,40);
		Student_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_ID);
		
		txtStudent_ID = new JTextField();
		txtStudent_ID.setBounds(100,180,60,30);
		jPanel.add(txtStudent_ID);
		
//		Student_Name
		JLabel Student_Name = new JLabel("Student_Name");
		Student_Name.setBounds(80,170,100,40);
		Student_Name.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_Name);
		
		txtStudent_Name = new JTextField();
		txtStudent_Name.setBounds(100,180,60,30);
		jPanel.add(txtStudent_Name);
		
//		Student_RRN
		JLabel Student_RRN = new JLabel("Student_RRN");
		Student_RRN.setBounds(170,170,100,40);
		Student_RRN.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_RRN);
		
		txtStudent_RRN = new JTextField();
		txtStudent_RRN.setBounds(220,180,60,30);
		jPanel.add(txtStudent_RRN);
		
//		Student_Address
		JLabel Student_Address = new JLabel("Student_Address");
		Student_Address.setBounds(290,170,100,40);
		Student_Address.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_Address);
		
		txtStudent_Address = new JTextField();
		txtStudent_Address.setBounds(320,180,60,30);
		jPanel.add(txtStudent_Address);
		
//		Student_Phone
		JLabel Student_Phone = new JLabel("Student_Phone");
		Student_Phone.setBounds(390,170,100,40);
		Student_Phone.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_Phone);
		
		txtStudent_Phone = new JTextField();
		txtStudent_Phone.setBounds(430,180,60,30);
		jPanel.add(txtStudent_Phone);
		
//		Student_Email
		JLabel Student_Email = new JLabel("Student_Email");
		Student_Email.setBounds(500,170,100,40);
		Student_Email.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_Email);

		txtStudent_Email = new JTextField();
		txtStudent_Email.setBounds(530,180,60,30);
		jPanel.add(txtStudent_Email);
		
//		Student_Image
		JLabel Student_Image = new JLabel("Student_Image");
		Student_Image.setBounds(600,170,100,40);
		Student_Image.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_Image);
		
		txtStudent_Image = new JTextField();
		txtStudent_Image.setBounds(665,180,60,30);
		jPanel.add(txtStudent_Image);
		
//		Department_ID
		JLabel Department_ID = new JLabel("Department_ID");
		Department_ID.setBounds(600,170,100,40);
		Department_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Department_ID);
		
		txtDepartment_ID = new JTextField();
		txtDepartment_ID.setBounds(665,180,60,30);
		jPanel.add(txtDepartment_ID);
		
//		Professor_ID
		JLabel Professor_ID = new JLabel("Professor_ID");
		Professor_ID.setBounds(600,170,100,40);
		Professor_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_ID);
		
		txtProfessor_ID = new JTextField();
		txtProfessor_ID.setBounds(665,180,60,30);
		jPanel.add(txtProfessor_ID);

//      Semester			
		JLabel Semester = new JLabel("Semester");
		Semester.setBounds(600,170,100,40);
		Semester.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Semester);
		
		txtSemester = new JTextField();
		txtSemester.setBounds(665,180,60,30);
		jPanel.add(txtSemester);
		
//      Year
		JLabel Year = new JLabel("Year");
		Year.setBounds(600,170,100,40);
		Year.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Year);
		
		txtYear = new JTextField();
		txtYear.setBounds(665,180,60,30);
		jPanel.add(txtYear);
		
//		btnInsert
		JButton btnInsert = new JButton("Insert");
		btnInsert.setBounds(350, 220, 80, 35);
		btnInsert.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnInsert.addActionListener(btnL);
		jPanel.add(btnInsert);
		
		

		JTable jTable = new JTable();
		DefaultTableModel model = new DefaultTableModel();

		ArrayList<DescribeTableVO> arrDescribeTableVO =           
				dbConnect.getTableDescription("Student");
		Object[] columnsName = new Object[arrDescribeTableVO.size()];
		for (int i = 0; i < arrDescribeTableVO.size(); i++) {
			columnsName[i] = arrDescribeTableVO.get(i).getColumn_name();
		}
		model.setColumnIdentifiers(columnsName);

		Object[] rowData = new Object[arrDescribeTableVO.size()];
		System.out.println(arrDescribeTableVO.size());
		ArrayList<StudentVO> arrStudentVO = dbConnect.selectStudent(condition);
		for (int i = 0; i < arrStudentVO.size(); i++) {
				
			rowData[0] = arrStudentVO.get(i).getStudent_ID();
			rowData[1] = arrStudentVO.get(i).getStudent_Name();
			rowData[2] = arrStudentVO.get(i).getStudent_RRN();
			rowData[3] = arrStudentVO.get(i).getStudent_Address();
			rowData[4] = arrStudentVO.get(i).getStudent_Phone();
			rowData[5] = arrStudentVO.get(i).getStudent_Email();
			rowData[6] = arrStudentVO.get(i).getStudent_Image();
			rowData[7] = arrStudentVO.get(i).getDepartment_ID();
			rowData[8] = arrStudentVO.get(i).getProfessor_ID();
			rowData[9] = arrStudentVO.get(i).getSemester();
			rowData[10] = arrStudentVO.get(i).getYear();
			
			model.addRow(rowData);
		}

		jTable.setModel(model);
		jTable.setPreferredScrollableViewportSize(jTable.getPreferredSize());
		jTable.setFillsViewportHeight(true);
		jTable.getTableHeader().setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setRowHeight(20);
		jTable.getTableHeader().setReorderingAllowed(false);

		jScollPane = new JScrollPane(jTable);
		jScollPane.setPreferredSize(new Dimension(650, 150));
		jScollPane.setBounds(75, 280, 650, 150);
//		jScollPane.getVerticalScrollBar().setValue(jScollPane.getVerticalScrollBar().getMaximum());
		
		jPanel.add(jScollPane);
		
		return jPanel;
	}

	private JPanel getProfessorTable(String condition) {
		JPanel jPanel = new JPanel();
		jPanel.setBounds(0, 0, 800, 450);
		jPanel.setBackground(new Color(245, 245, 245));
		jPanel.setLayout(null);
		
		/*******SELECT********/
		JLabel lbSelect = new JLabel("SELECT");
		lbSelect.setBounds(80,20,100,40);
		lbSelect.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbSelect);
		
		JLabel lbWhere = new JLabel("Where : ");
		lbWhere.setBounds(80,60,100,40);
		lbWhere.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbWhere);
		
		txtProfessorWhere = new JTextField();
		txtProfessorWhere.setBounds(150,65,600,30);
		txtProfessorWhere.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(txtProfessorWhere);
		
//		btnSelect
		JButton btnSelect = new JButton("Select");
		btnSelect.setBounds(350, 100, 80, 35);
		btnSelect.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnSelect.addActionListener(btnL);
		jPanel.add(btnSelect);
		
		
		/*******INSERT********/
		JLabel lbInsert = new JLabel("INSERT");
		lbInsert.setBounds(80,140,100,40);
		lbInsert.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbInsert);
		
//		Professor_ID
		JLabel Professor_ID = new JLabel("Professor_ID");
		Professor_ID.setBounds(80,170,100,40);
		Professor_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_ID);
		
		txtProfessor_ID = new JTextField();
		txtProfessor_ID.setBounds(140,180,60,30);
		jPanel.add(txtProfessor_ID);
		
//		Professor_Name
		JLabel Professor_Name = new JLabel("Professor_Name");
		Professor_Name.setBounds(210,170,100,40);
		Professor_Name.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_Name);
		
		txtProfessor_Name = new JTextField();
		txtProfessor_Name.setBounds(290,180,60,30);
		jPanel.add(txtProfessor_Name);
		
//		Professor_RRN
		JLabel Professor_RRN = new JLabel("Professor_RRN");
		Professor_RRN.setBounds(360,170,100,40);
		Professor_RRN.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_RRN);
		
		txtProfessor_RRN = new JTextField();
		txtProfessor_RRN.setBounds(430,180,60,30);
		jPanel.add(txtProfessor_RRN);
		
//		Professor_Address
		JLabel Professor_Address = new JLabel("Professor_Address");
		Professor_Address.setBounds(500,170,100,40);
		Professor_Address.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_Address);
		
		txtProfessor_Address = new JTextField();
		txtProfessor_Address.setBounds(540,180,60,30);
		jPanel.add(txtProfessor_Address);
		
		
//		Professor_Phone
		JLabel Professor_Phone = new JLabel("Professor_Phone");
		Professor_Phone.setBounds(610,170,100,40);
		Professor_Phone.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_Phone);
		
		txtProfessor_Phone = new JTextField();
		txtProfessor_Phone.setBounds(710,180,60,30);
		jPanel.add(txtProfessor_Phone);
		
		
//		btnInsert
		JButton btnInsert = new JButton("Insert");
		btnInsert.setBounds(350, 220, 80, 35);
		btnInsert.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnInsert.addActionListener(btnL);
		jPanel.add(btnInsert);
		JTable jTable = new JTable();
		DefaultTableModel model = new DefaultTableModel();

		ArrayList<DescribeTableVO> arrDescribeTableVO = dbConnect.getTableDescription("Professor");
		Object[] columnsName = new Object[arrDescribeTableVO.size()];
		for (int i = 0; i < arrDescribeTableVO.size(); i++) {
			columnsName[i] = arrDescribeTableVO.get(i).getColumn_name();
		}
		model.setColumnIdentifiers(columnsName);

		Object[] rowData = new Object[arrDescribeTableVO.size()];
		ArrayList<ProfessorVO> arrProfessorVO = dbConnect.selectProfessor(condition);
		for (int i = 0; i < arrProfessorVO.size(); i++) {
			rowData[0] = arrProfessorVO.get(i).getProfessor_ID();
			rowData[1] = arrProfessorVO.get(i).getProfessor_Name();
			rowData[2] = arrProfessorVO.get(i).getProfessor_RRN();
			rowData[3] = arrProfessorVO.get(i).getProfessor_Address();
			rowData[4] = arrProfessorVO.get(i).getProfessor_Phone();
			rowData[5] = arrProfessorVO.get(i).getProfessor_Email();
			rowData[6] = arrProfessorVO.get(i).getProfessor_Image();
			rowData[7] = arrProfessorVO.get(i).getDepartment_ID();
			

			model.addRow(rowData);
		}

		jTable.setModel(model);
		jTable.setPreferredScrollableViewportSize(jTable.getPreferredSize());
		jTable.setFillsViewportHeight(true);
		jTable.getTableHeader().setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setRowHeight(20);
		
		jScollPane = new JScrollPane(jTable);
		jScollPane.setPreferredSize(new Dimension(650, 150));
		jScollPane.setBounds(75, 280, 650, 150);
//		jScollPane.getVerticalScrollBar().setValue(jScollPane.getVerticalScrollBar().getMaximum());
		
		jPanel.add(jScollPane);

		return jPanel;
	}

	private JPanel getDepartmentTable(String condition) {
		JPanel jPanel = new JPanel();
		jPanel.setBounds(0, 0, 800, 450);
		jPanel.setBackground(new Color(245, 245, 245));
		jPanel.setLayout(null);
		
		/*******SELECT********/
		JLabel lbSelect = new JLabel("SELECT");
		lbSelect.setBounds(80,20,100,40);
		lbSelect.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbSelect);
		
		JLabel lbWhere = new JLabel("Where : ");
		lbWhere.setBounds(80,60,100,40);
		lbWhere.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbWhere);
		
		txtDepartmentWhere = new JTextField();
		txtDepartmentWhere.setBounds(150,65,600,30);
		txtDepartmentWhere.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(txtDepartmentWhere);
		
//		btnSelect
		JButton btnSelect = new JButton("Select");
		btnSelect.setBounds(350, 100, 80, 35);
		btnSelect.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnSelect.addActionListener(btnL);
		jPanel.add(btnSelect);
		
		
		/*******INSERT********/
		JLabel lbInsert = new JLabel("INSERT");
		lbInsert.setBounds(80,140,100,40);
		lbInsert.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbInsert);
		
//		Department_ID
		JLabel Department_ID = new JLabel("Department_ID");
		Department_ID.setBounds(80,170,100,40);
		Department_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Department_ID);
		
		txtDepartment_ID = new JTextField();
		txtDepartment_ID.setBounds(110,180,60,30);
		jPanel.add(txtDepartment_ID);
		
//		Department_Name
		JLabel Department_Name = new JLabel("Department_Name");
		Department_Name.setBounds(180,170,100,40);
		Department_Name.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Department_Name);
		
		txtDepartment_Name = new JTextField();
		txtDepartment_Name.setBounds(210,180,60,30);
		jPanel.add(txtDepartment_Name);
		
//		Department_Phone
		JLabel Department_Phone = new JLabel("Department_Phone");
		Department_Phone.setBounds(280,170,100,40);
		Department_Phone.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Department_Phone);
		
		txtDepartment_Phone = new JTextField();
		txtDepartment_Phone.setBounds(320,180,60,30);
		jPanel.add(txtDepartment_Phone);		

		
//		btnInsert
		JButton btnInsert = new JButton("Insert");
		btnInsert.setBounds(350, 220, 80, 35);
		btnInsert.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnInsert.addActionListener(btnL);
		jPanel.add(btnInsert);

		JTable jTable = new JTable();
		DefaultTableModel model = new DefaultTableModel();

		ArrayList<DescribeTableVO> arrDescribeTableVO = dbConnect.getTableDescription("Department");
		Object[] columnsName = new Object[arrDescribeTableVO.size()];
		for (int i = 0; i < arrDescribeTableVO.size(); i++) {
			columnsName[i] = arrDescribeTableVO.get(i).getColumn_name();
		}
		model.setColumnIdentifiers(columnsName);

		Object[] rowData = new Object[arrDescribeTableVO.size()];
		ArrayList<DepartmentVO> arrDepartmentVO = dbConnect.selectDepartment(condition);
		for (int i = 0; i < arrDepartmentVO.size(); i++) {
			rowData[0] = arrDepartmentVO.get(i).getDepartment_ID();
			rowData[1] = arrDepartmentVO.get(i).getDepartment_Name();
			rowData[2] = arrDepartmentVO.get(i).getDepartment_Phone();

			model.addRow(rowData);
		}

		jTable.setModel(model);
		jTable.setPreferredScrollableViewportSize(jTable.getPreferredSize());
		jTable.setFillsViewportHeight(true);
		jTable.getTableHeader().setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setRowHeight(20);
		jTable.getTableHeader().setReorderingAllowed(false);

		jScollPane = new JScrollPane(jTable);
		jScollPane.setPreferredSize(new Dimension(650, 150));
		jScollPane.setBounds(75, 280, 650, 150);
//		jScollPane.getVerticalScrollBar().setValue(jScollPane.getVerticalScrollBar().getMaximum());
		
		jPanel.add(jScollPane);

		return jPanel;
	}
	
	private JPanel getCourseTable(String condition) {
		JPanel jPanel = new JPanel();
		jPanel.setBounds(0, 0, 800, 450);
		jPanel.setBackground(new Color(245, 245, 245));
		jPanel.setLayout(null);
		
		/*******SELECT********/
		JLabel lbSelect = new JLabel("SELECT");
		lbSelect.setBounds(80,20,100,40);
		lbSelect.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbSelect);
		
		JLabel lbWhere = new JLabel("Where : ");
		lbWhere.setBounds(80,60,100,40);
		lbWhere.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbWhere);
		
		txtCourseWhere = new JTextField();
		txtCourseWhere.setBounds(150,65,600,30);
		txtCourseWhere.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(txtCourseWhere);
		
//		btnSelect
		JButton btnSelect = new JButton("Select");
		btnSelect.setBounds(350, 100, 80, 35);
		btnSelect.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnSelect.addActionListener(btnL);
		jPanel.add(btnSelect);
		
		
		/*******INSERT********/
		JLabel lbInsert = new JLabel("INSERT");
		lbInsert.setBounds(80,140,100,40);
		lbInsert.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbInsert);
		
//		Course_ID
		JLabel Course_ID = new JLabel("Course_ID");
		Course_ID.setBounds(80,170,100,40);
		Course_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Course_ID);
		
		txtCourse_ID = new JTextField();
		txtCourse_ID.setBounds(110,180,60,30);
		jPanel.add(txtCourse_ID);
		
//		Professor_ID
		JLabel Professor_ID = new JLabel("Professor_ID");
		Professor_ID.setBounds(180,170,100,40);
		Professor_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_ID);
		
		txtProfessor_ID = new JTextField();
		txtProfessor_ID.setBounds(210,180,60,30);
		jPanel.add(txtProfessor_ID);
		
//		Course_Title
		JLabel Course_Title = new JLabel("Course_Title");
		Course_Title.setBounds(280,170,100,40);
		Course_Title.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Course_Title);
		
		txtCourse_Title = new JTextField();
		txtCourse_Title.setBounds(320,180,60,30);
		jPanel.add(txtCourse_Title);
		
//		Credit
		JLabel Credit = new JLabel("Credit");
		Credit.setBounds(390,170,100,40);
		Credit.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Credit);
		
		txtCredit = new JTextField();
		txtCredit.setBounds(455,180,60,30);
		jPanel.add(txtCredit);
		
//		Class_Time
		JLabel Class_Time = new JLabel("Class_Time");
		Class_Time.setBounds(525,170,100,40);
		Class_Time.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Class_Time);

		txtClass_Time = new JTextField();
		txtClass_Time.setBounds(580,180,60,30);
		jPanel.add(txtClass_Time);
		
//		Room
		JLabel Room = new JLabel("Room");
		Room.setBounds(650,170,100,40);
		Room.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Room);
		
		txtRoom = new JTextField();
		txtRoom.setBounds(720,180,60,30);
		jPanel.add(txtRoom);
		
//		Department_ID
		JLabel Department_ID = new JLabel("Department_ID");
		Department_ID.setBounds(650,170,100,40);
		Department_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Department_ID);
		
		txtDepartment_ID = new JTextField();
		txtDepartment_ID.setBounds(720,180,60,30);
		jPanel.add(txtDepartment_ID);
		
//		btnInsert
		JButton btnInsert = new JButton("Insert");
		btnInsert.setBounds(350, 220, 80, 35);
		btnInsert.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnInsert.addActionListener(btnL);
		jPanel.add(btnInsert);

		JTable jTable = new JTable();
		DefaultTableModel model = new DefaultTableModel();

		ArrayList<DescribeTableVO> arrDescribeTableVO = dbConnect.getTableDescription("Course");
		Object[] columnsName = new Object[arrDescribeTableVO.size()];
		for (int i = 0; i < arrDescribeTableVO.size(); i++) {
			columnsName[i] = arrDescribeTableVO.get(i).getColumn_name();
		}
		model.setColumnIdentifiers(columnsName);

		Object[] rowData = new Object[arrDescribeTableVO.size()];
		ArrayList<CourseVO> arrCourseVO = dbConnect.selectCourse(condition);
		for (int i = 0; i < arrCourseVO.size(); i++) {
			rowData[0] = arrCourseVO.get(i).getCourse_ID();
			rowData[1] = arrCourseVO.get(i).getProfessor_ID();
			rowData[2] = arrCourseVO.get(i).getCourse_Title();
			rowData[3] = arrCourseVO.get(i).getCredit();
			rowData[4] = arrCourseVO.get(i).getClass_Time();
			rowData[5] = arrCourseVO.get(i).getRoom();
			rowData[6] = arrCourseVO.get(i).getDepartment_ID();
			
			model.addRow(rowData);
		}

		jTable.setModel(model);
		jTable.setPreferredScrollableViewportSize(jTable.getPreferredSize());
		jTable.setFillsViewportHeight(true);
		jTable.getTableHeader().setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setRowHeight(20);
		jTable.getTableHeader().setReorderingAllowed(false);

		jScollPane = new JScrollPane(jTable);
		jScollPane.setPreferredSize(new Dimension(650, 150));
		jScollPane.setBounds(75, 280, 650, 150);
//		jScollPane.getVerticalScrollBar().setValue(jScollPane.getVerticalScrollBar().getMaximum());
		
		jPanel.add(jScollPane);

		return jPanel;
	}

	private JPanel getCourseDetailsTable(String condition) {
		JPanel jPanel = new JPanel();
		jPanel.setBounds(0, 0, 800, 450);
		jPanel.setBackground(new Color(245, 245, 245));
		jPanel.setLayout(null);
		
		/*******SELECT********/
		JLabel lbSelect = new JLabel("SELECT");
		lbSelect.setBounds(80,20,100,40);
		lbSelect.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbSelect);
		
		JLabel lbWhere = new JLabel("Where : ");
		lbWhere.setBounds(80,60,100,40);
		lbWhere.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbWhere);
		
		txtCourseDetailsWhere = new JTextField();
		txtCourseDetailsWhere.setBounds(150,65,600,30);
		txtCourseDetailsWhere.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(txtCourseDetailsWhere);
		
//		btnSelect
		JButton btnSelect = new JButton("Select");
		btnSelect.setBounds(350, 100, 80, 35);
		btnSelect.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnSelect.addActionListener(btnL);
		jPanel.add(btnSelect);
		
		
		/*******INSERT********/
		JLabel lbInsert = new JLabel("INSERT");
		lbInsert.setBounds(80,140,100,40);
		lbInsert.setFont(new Font("Verdana", Font.PLAIN,17));
		jPanel.add(lbInsert);
		
//		Student_ID
		JLabel Student_ID = new JLabel("Student_ID");
		Student_ID.setBounds(80,170,100,40);
		Student_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Student_ID);
		
		txtStudent_ID = new JTextField();
		txtStudent_ID.setBounds(110,180,60,30);
		jPanel.add(txtStudent_ID);
		
//		Course_ID
		JLabel Course_ID = new JLabel("Course_ID");
		Course_ID.setBounds(180,170,100,40);
		Course_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Course_ID);
		
		txtCourse_ID = new JTextField();
		txtCourse_ID.setBounds(210,180,60,30);
		jPanel.add(txtCourse_ID);
		
//		Professor_ID
		JLabel Professor_ID = new JLabel("Professor_ID");
		Professor_ID.setBounds(280,170,100,40);
		Professor_ID.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Professor_ID);
		
		txtProfessor_ID = new JTextField();
		txtProfessor_ID.setBounds(320,180,60,30);
		jPanel.add(txtProfessor_ID);
		
//		AttendScore
		JLabel Attend_Score = new JLabel("Attend_Score");
		Attend_Score.setBounds(390,170,100,40);
		Attend_Score.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Attend_Score);
		
		txtAttend_Score = new JTextField();
		txtAttend_Score.setBounds(455,180,60,30);
		jPanel.add(txtAttend_Score);
		
//		MiddleScore
		JLabel Middle_Score = new JLabel("Middle_Score");
		Middle_Score.setBounds(525,170,100,40);
		Middle_Score.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Middle_Score);

		txtMiddle_Score = new JTextField();
		txtMiddle_Score.setBounds(580,180,60,30);
		jPanel.add(txtMiddle_Score);
		
//		FinalScore
		JLabel Final_Score = new JLabel("Final_Score");
		Final_Score.setBounds(650,170,100,40);
		Final_Score.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Final_Score);
		
		txtFinal_Score = new JTextField();
		txtFinal_Score.setBounds(720,180,60,30);
		jPanel.add(txtFinal_Score);

//		etcScore
		JLabel etc_Score = new JLabel("etc_Score");
		etc_Score.setBounds(650,170,100,40);
		etc_Score.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(etc_Score);
		
		txtetc_Score = new JTextField();
		txtetc_Score.setBounds(720,180,60,30);
		jPanel.add(txtetc_Score);
		
//		Total_Score
		JLabel Total_Score = new JLabel("Total_Score");
		Total_Score.setBounds(650,170,100,40);
		Total_Score.setFont(new Font("Verdana", Font.PLAIN,15));
		jPanel.add(Total_Score);
		
		txtTotal_Score = new JTextField();
		txtTotal_Score.setBounds(720,180,60,30);
		jPanel.add(txtTotal_Score);
		
//		btnInsert
		JButton btnInsert = new JButton("Insert");
		btnInsert.setBounds(350, 220, 80, 35);
		btnInsert.setFont(new Font("Verdana", Font.PLAIN, 15));
		btnInsert.addActionListener(btnL);
		jPanel.add(btnInsert);

		JTable jTable = new JTable();
		DefaultTableModel model = new DefaultTableModel();

		ArrayList<DescribeTableVO> arrDescribeTableVO = dbConnect.getTableDescription("CourseDetails");
		Object[] columnsName = new Object[arrDescribeTableVO.size()];
		for (int i = 0; i < arrDescribeTableVO.size(); i++) {
			columnsName[i] = arrDescribeTableVO.get(i).getColumn_name();
		}
		model.setColumnIdentifiers(columnsName);

		Object[] rowData = new Object[arrDescribeTableVO.size()];
		ArrayList<CourseDetailsVO> arrCourseDetailsVO = dbConnect.selectCourseDetails(condition);
		for (int i = 0; i < arrCourseDetailsVO.size(); i++) {
			rowData[0] = arrCourseDetailsVO.get(i).getStudent_ID();
			rowData[1] = arrCourseDetailsVO.get(i).getCourse_ID();
			rowData[2] = arrCourseDetailsVO.get(i).getProfessor_ID();
			rowData[3] = arrCourseDetailsVO.get(i).getAttend_Score();
			rowData[4] = arrCourseDetailsVO.get(i).getMiddle_Score();
			rowData[5] = arrCourseDetailsVO.get(i).getFinal_Score();
			rowData[6] = arrCourseDetailsVO.get(i).getetc_Score();
			rowData[7] = arrCourseDetailsVO.get(i).getTotal_Score();
			rowData[8] = arrCourseDetailsVO.get(i).getGrade_Point();			
			
			model.addRow(rowData);
		}

		jTable.setModel(model);
		jTable.setPreferredScrollableViewportSize(jTable.getPreferredSize());
		jTable.setFillsViewportHeight(true);
		jTable.getTableHeader().setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setFont(new Font("Verdana", Font.PLAIN, 17));
		jTable.setRowHeight(20);
		jTable.getTableHeader().setReorderingAllowed(false);

		jScollPane = new JScrollPane(jTable);
		jScollPane.setPreferredSize(new Dimension(650, 150));
		jScollPane.setBounds(75, 280, 650, 150);
//		jScollPane.getVerticalScrollBar().setValue(jScollPane.getVerticalScrollBar().getMaximum());
		
		jPanel.add(jScollPane);

		return jPanel;
	}


	private class BtnListener implements ActionListener {
		public void actionPerformed(ActionEvent event) {

			JButton b = (JButton) event.getSource();
			String tableName;
			String condition = "";
			
			String btnName=null;
			btnName=b.getText();
			switch(btnName) {
				case "Search":
					mainPanel.removeAll();
					mainPanel.setLayout(null);
	
					tableName = strMenu[cmbMenu.getSelectedIndex()];
					condition = "";
					jTable = null;
					tempPanel = null;
	
					switch (tableName) {
					case "Student":
						tempPanel = getStudentTable(condition);
						break;
					case "Professor":
						tempPanel = getProfessorTable(condition);
						break;
					case "Department":
						tempPanel = getDepartmentTable(condition);
						break;
					case "Course":
						tempPanel = getCourseTable(condition);
						break;
					case "Course_Details":
						tempPanel = getCourseDetailsTable(condition);
						break;
					}
	
					mainPanel.add(tempPanel);
					add(mainPanel);
	
					setVisible(true);
					validate();
					repaint();
					break;
					
				case "Insert":
					mainPanel.removeAll();
					mainPanel.setLayout(null);
	
					tableName = strMenu[cmbMenu.getSelectedIndex()];
					jTable = null;
					tempPanel = null;
	
					switch (tableName) {
					case "Student":
						dbConnect.insertStudent(txtStudent_ID.getText(), txtStudent_Name.getText(),Integer.parseInt(txtStudent_RRN.getText()), txtStudent_Address.getText(), 
								 txtStudent_Phone.getText(), txtStudent_Email.getText(),txtStudent_Image.getText(),txtDepartment_ID.getText(), txtProfessor_ID.getText(),
								 Integer.parseInt(txtSemester.getText()), Integer.parseInt(txtYear.getText()));
						tempPanel = getStudentTable(condition);
						break;
						
					case "Professor":
						dbConnect.insertProfessor(txtProfessor_ID.getText(), txtProfessor_Name.getText(), Integer.parseInt(txtProfessor_RRN.getText()),  txtProfessor_Address.getText(), txtProfessor_Phone.getText(), 
								txtProfessor_Email.getText(),txtProfessor_Image.getText(),txtDepartment_ID.getText());
						tempPanel = getProfessorTable(condition);
							
						break;
					case "Department":
						dbConnect.insertDepartment(txtDepartment_ID.getText(), txtDepartment_Name.getText(), txtDepartment_Phone.getText());
								
						tempPanel = getDepartmentTable(condition);
						break;
					case "Course":
						dbConnect.insertCourse(txtCourse_ID.getText(), txtProfessor_ID.getText(), txtCourse_Title.getText(),Integer.parseInt(txtCredit.getText()),
								 txtClass_Time.getText(), txtRoom.getText(),txtDepartment_ID.getText());
						tempPanel = getCourseTable(condition);
						break;
					case "CourseDetails":
						dbConnect.insertCourseDetails(txtStudent_ID.getText(), txtCourse_ID.getText(), txtProfessor_ID.getText(),
								Double.parseDouble(txtAttend_Score.getText()), Double.parseDouble(txtMiddle_Score.getText()), Double.parseDouble(txtFinal_Score.getText()),
								Double.parseDouble(txtetc_Score.getText()),Double.parseDouble(txtTotal_Score.getText()), Double.parseDouble(txtGrade_Point.getText()));
						tempPanel = getCourseTable(condition);
						break;
					}
					 
					//insertProfessor(String Professor_ID, String Professor_Name, String Professor_RRN, String Professor_Address, String Professor_Phone, String Professor_Email,
					//String Professor_Image, String Department_ID)
					
					mainPanel.add(tempPanel);
					add(mainPanel);
	
					setVisible(true);
					validate();
					repaint();
					break;
					
				case "Select":
					mainPanel.removeAll();
					mainPanel.setLayout(null);
	
					tableName = strMenu[cmbMenu.getSelectedIndex()];
					jTable = null;
					tempPanel = null;
	
					switch (tableName) {
					case "Student":
						condition="where ";
						condition+=txtStudentWhere.getText();
						tempPanel = getStudentTable(condition);
						break;
					case "Professor":
						condition="where ";
						condition+=txtProfessorWhere.getText();
						tempPanel = getProfessorTable(condition);
						break;
					case "Department":
						condition="where ";
						condition+=txtDepartmentWhere.getText();
						tempPanel = getDepartmentTable(condition);
						break;
					case "Course":
						condition="where ";
						condition+=txtCourseWhere.getText();
						tempPanel = getCourseTable(condition);
						break;
					case "CourseDetails":
						condition="where ";
						condition+=txtCourseDetailsWhere.getText();
						tempPanel = getCourseDetailsTable(condition);
						break;
					}
	
					mainPanel.add(tempPanel);
					add(mainPanel);
	
					setVisible(true);
					validate();
					repaint();
					break;
				
			}
			
		}

	} // BtnListener class

} // PrimaryPanel class
